name: Release

on:
    workflow_dispatch:

env:
    SIGNING_KEYSTORE_FILE: ./signing_key.jks
    BUILD_APK_FILE: ./app/build/outputs/apk/release/app-release.apk
    OUTPUT_DIR: ./dist

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: npm

            - uses: actions/setup-java@v3
              with:
                  distribution: zulu
                  java-version: 17
                  cache: gradle

            - name: üöß Do prerequisites
              run: npm ci

            - name: üî¢ Get version
              id: app_version
              run: echo "version=$(npm run --silent git:ref)" >> $GITHUB_OUTPUT

            - name: üîé Check for release
              run: npm run --silent git:tag-exists -- $TAG_NAME
              env:
                  TAG_NAME: v${{ steps.app_version.outputs.version }}

            - name: üî® Generate certificate
              run: echo $SIGNING_KEYSTORE_FILE_CONTENT | base64 -di > $SIGNING_KEYSTORE_FILE
              env:
                  SIGNING_KEYSTORE_FILE_CONTENT: ${{ secrets.SIGNING_KEYSTORE_FILE }}

            - name: üî® Build apk
              run: |
                  npm run prebuild
                  chmod +x ./gradlew
                  ./gradlew build
              env:
                  SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

            - name: üìù Rename apk
              run: mv $BUILD_APK_FILE $OUTPUT_DIR/symphony-v$APP_VERSION_NAME.apk
              env:
                  APP_VERSION_NAME: ${{ steps.app_version.outputs.version }}

            - name: üöÄ Upload apk
              uses: ncipollo/release-action@v1
              with:
                  tag: v${{ steps.app_version.outputs.version }}
                  artifacts: ${{ env.OUTPUT_DIR }}/*
                  generateReleaseNotes: true
                  draft: true
                  artifactErrorsFailBuild: true
